#Specification: https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html

# ---------- ***PERSISTENCE*** -------------
#DB Autentication Conection
spring.datasource.url=jdbc:oracle:oci8:@localhost:1521:orcl
spring.datasource.username=White_Schema
spring.datasource.password=k'9E&W3q7mc4-JaJ

#Initial deprecated Default Login
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:orcl [SYSTEM on Default schema]
#hibernate.connection.username=system

# I think is for the .sql INSERTS and commands. {*embedded*, always, never} [https://stackoverflow.com/questions/53922279/what-are-the-possible-values-of-spring-datasource-initialization-mode]
#spring.datasource.initialization-mode=always

# Creates the Database from the Entities. {none,validate,update,create,create-drop}   https://docs.jboss.org/hibernate/orm/5.0/manual/en-US/html/ch03.html Delete the line in production env.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect
# ------------------------------------------



# ---------- ***LOGGING*** ---------------
#Suggested: %clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
logging.pattern.console=%clr(%d{${LOG_DATEFORMAT_PATTERN:-HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(---) %clr(%-40.40logger{39}){cyan} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

#WARNING! every level overrides logback-test.xml configuration (test logs). Everything is going to log this level and up unless specified differently and lowering it to INFO will log unuseful logs from other libraries.
logging.level.root=WARN

#initial **SPRING** banner title in logs
#spring.main.banner-mode=off
#logging.level.org.springframework=WARN

#              ****AppSpecific****
#This will affect test classes if active
logging.level.org.white_sdev.white_finances=DEBUG
#INFO & DEBUG will activate The Test Classes Methods trace logging but also some extra INFO & DEBUG logs for each Test Class
logging.level.org.white_sdev.white_finances.test=WARN
#-----------------------------------------



# ---------------- ***SQL Logging*** ---------------------------
#CPU Consuming https://www.baeldung.com/sql-logging-spring-boot. Also it won't work or have any effect for the current implementation, instead use: spring.jpa.properties.hibernate.show_sql
#spring.jpa.show-sql=true
#This will show up the "select hibernate_sequence" queries only
spring.jpa.properties.hibernate.show_sql=false
#this will show the logs with the same pattern as the rest of the application     ( <------------------------------RECOMMENDED)
#logging.level.org.hibernate.SQL=DEBUG
#Use the next to habilitate individual type of SQL Logging
#logging.level.org.hibernate.insert.descriptor.sql.BasicBinder=TRACE
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.hibernate.update.descriptor.sql.BasicBinder=TRACE
# -------------------------------------------------------------
